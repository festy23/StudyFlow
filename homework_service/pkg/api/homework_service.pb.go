// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: homework_service.proto

package api

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssignmentStatusFilter int32

const (
	AssignmentStatusFilter_ASSIGNMENT_STATUS_UNSPECIFIED AssignmentStatusFilter = 0
	AssignmentStatusFilter_UNSENT                        AssignmentStatusFilter = 1
	AssignmentStatusFilter_UNREVIEWED                    AssignmentStatusFilter = 2
	AssignmentStatusFilter_REVIEWED                      AssignmentStatusFilter = 3
	AssignmentStatusFilter_OVERDUE                       AssignmentStatusFilter = 4
)

// Enum value maps for AssignmentStatusFilter.
var (
	AssignmentStatusFilter_name = map[int32]string{
		0: "ASSIGNMENT_STATUS_UNSPECIFIED",
		1: "UNSENT",
		2: "UNREVIEWED",
		3: "REVIEWED",
		4: "OVERDUE",
	}
	AssignmentStatusFilter_value = map[string]int32{
		"ASSIGNMENT_STATUS_UNSPECIFIED": 0,
		"UNSENT":                        1,
		"UNREVIEWED":                    2,
		"REVIEWED":                      3,
		"OVERDUE":                       4,
	}
)

func (x AssignmentStatusFilter) Enum() *AssignmentStatusFilter {
	p := new(AssignmentStatusFilter)
	*p = x
	return p
}

func (x AssignmentStatusFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssignmentStatusFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_homework_service_proto_enumTypes[0].Descriptor()
}

func (AssignmentStatusFilter) Type() protoreflect.EnumType {
	return &file_homework_service_proto_enumTypes[0]
}

func (x AssignmentStatusFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssignmentStatusFilter.Descriptor instead.
func (AssignmentStatusFilter) EnumDescriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_homework_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{0}
}

type DeleteAssignmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssignmentId  string                 `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAssignmentRequest) Reset() {
	*x = DeleteAssignmentRequest{}
	mi := &file_homework_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssignmentRequest) ProtoMessage() {}

func (x *DeleteAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssignmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteAssignmentRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

type CreateAssignmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TutorId       string                 `protobuf:"bytes,1,opt,name=tutor_id,json=tutorId,proto3" json:"tutor_id,omitempty"`
	StudentId     string                 `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	FileId        string                 `protobuf:"bytes,5,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	DueDate       *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAssignmentRequest) Reset() {
	*x = CreateAssignmentRequest{}
	mi := &file_homework_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssignmentRequest) ProtoMessage() {}

func (x *CreateAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssignmentRequest.ProtoReflect.Descriptor instead.
func (*CreateAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAssignmentRequest) GetTutorId() string {
	if x != nil {
		return x.TutorId
	}
	return ""
}

func (x *CreateAssignmentRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *CreateAssignmentRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateAssignmentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAssignmentRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *CreateAssignmentRequest) GetDueDate() *timestamp.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

type UpdateAssignmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	FileId        string                 `protobuf:"bytes,4,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	DueDate       *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAssignmentRequest) Reset() {
	*x = UpdateAssignmentRequest{}
	mi := &file_homework_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssignmentRequest) ProtoMessage() {}

func (x *UpdateAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssignmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAssignmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAssignmentRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateAssignmentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAssignmentRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UpdateAssignmentRequest) GetDueDate() *timestamp.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

type ListAssignmentsByTutorRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	TutorId       string                   `protobuf:"bytes,1,opt,name=tutor_id,json=tutorId,proto3" json:"tutor_id,omitempty"`
	StatusFilter  []AssignmentStatusFilter `protobuf:"varint,2,rep,packed,name=status_filter,json=statusFilter,proto3,enum=homework.v1.AssignmentStatusFilter" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssignmentsByTutorRequest) Reset() {
	*x = ListAssignmentsByTutorRequest{}
	mi := &file_homework_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssignmentsByTutorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssignmentsByTutorRequest) ProtoMessage() {}

func (x *ListAssignmentsByTutorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssignmentsByTutorRequest.ProtoReflect.Descriptor instead.
func (*ListAssignmentsByTutorRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListAssignmentsByTutorRequest) GetTutorId() string {
	if x != nil {
		return x.TutorId
	}
	return ""
}

func (x *ListAssignmentsByTutorRequest) GetStatusFilter() []AssignmentStatusFilter {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

type ListAssignmentsByStudentRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	StudentId     string                   `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StatusFilter  []AssignmentStatusFilter `protobuf:"varint,2,rep,packed,name=status_filter,json=statusFilter,proto3,enum=homework.v1.AssignmentStatusFilter" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssignmentsByStudentRequest) Reset() {
	*x = ListAssignmentsByStudentRequest{}
	mi := &file_homework_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssignmentsByStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssignmentsByStudentRequest) ProtoMessage() {}

func (x *ListAssignmentsByStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssignmentsByStudentRequest.ProtoReflect.Descriptor instead.
func (*ListAssignmentsByStudentRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListAssignmentsByStudentRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ListAssignmentsByStudentRequest) GetStatusFilter() []AssignmentStatusFilter {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

type ListAssignmentsByPairRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	TutorId       string                   `protobuf:"bytes,1,opt,name=tutor_id,json=tutorId,proto3" json:"tutor_id,omitempty"`
	StudentId     string                   `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StatusFilter  []AssignmentStatusFilter `protobuf:"varint,3,rep,packed,name=status_filter,json=statusFilter,proto3,enum=homework.v1.AssignmentStatusFilter" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssignmentsByPairRequest) Reset() {
	*x = ListAssignmentsByPairRequest{}
	mi := &file_homework_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssignmentsByPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssignmentsByPairRequest) ProtoMessage() {}

func (x *ListAssignmentsByPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssignmentsByPairRequest.ProtoReflect.Descriptor instead.
func (*ListAssignmentsByPairRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListAssignmentsByPairRequest) GetTutorId() string {
	if x != nil {
		return x.TutorId
	}
	return ""
}

func (x *ListAssignmentsByPairRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ListAssignmentsByPairRequest) GetStatusFilter() []AssignmentStatusFilter {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

type ListAssignmentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assignments   []*Assignment          `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssignmentsResponse) Reset() {
	*x = ListAssignmentsResponse{}
	mi := &file_homework_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssignmentsResponse) ProtoMessage() {}

func (x *ListAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*ListAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListAssignmentsResponse) GetAssignments() []*Assignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type CreateSubmissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssignmentId  string                 `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	FileId        string                 `protobuf:"bytes,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Comment       string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubmissionRequest) Reset() {
	*x = CreateSubmissionRequest{}
	mi := &file_homework_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionRequest) ProtoMessage() {}

func (x *CreateSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionRequest.ProtoReflect.Descriptor instead.
func (*CreateSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSubmissionRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *CreateSubmissionRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *CreateSubmissionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ListSubmissionsByAssignmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssignmentId  string                 `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubmissionsByAssignmentRequest) Reset() {
	*x = ListSubmissionsByAssignmentRequest{}
	mi := &file_homework_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsByAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsByAssignmentRequest) ProtoMessage() {}

func (x *ListSubmissionsByAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsByAssignmentRequest.ProtoReflect.Descriptor instead.
func (*ListSubmissionsByAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListSubmissionsByAssignmentRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

type ListSubmissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submissions   []*Submission          `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubmissionsResponse) Reset() {
	*x = ListSubmissionsResponse{}
	mi := &file_homework_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsResponse) ProtoMessage() {}

func (x *ListSubmissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsResponse.ProtoReflect.Descriptor instead.
func (*ListSubmissionsResponse) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListSubmissionsResponse) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

type CreateFeedbackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	FileId        string                 `protobuf:"bytes,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Comment       string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFeedbackRequest) Reset() {
	*x = CreateFeedbackRequest{}
	mi := &file_homework_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedbackRequest) ProtoMessage() {}

func (x *CreateFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedbackRequest.ProtoReflect.Descriptor instead.
func (*CreateFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{11}
}

func (x *CreateFeedbackRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *CreateFeedbackRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *CreateFeedbackRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type UpdateFeedbackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	FileId        string                 `protobuf:"bytes,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Comment       string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFeedbackRequest) Reset() {
	*x = UpdateFeedbackRequest{}
	mi := &file_homework_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedbackRequest) ProtoMessage() {}

func (x *UpdateFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedbackRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateFeedbackRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *UpdateFeedbackRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UpdateFeedbackRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ListFeedbacksByAssignmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssignmentId  string                 `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFeedbacksByAssignmentRequest) Reset() {
	*x = ListFeedbacksByAssignmentRequest{}
	mi := &file_homework_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFeedbacksByAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbacksByAssignmentRequest) ProtoMessage() {}

func (x *ListFeedbacksByAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbacksByAssignmentRequest.ProtoReflect.Descriptor instead.
func (*ListFeedbacksByAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListFeedbacksByAssignmentRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

type ListFeedbacksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Feedbacks     []*Feedback            `protobuf:"bytes,1,rep,name=feedbacks,proto3" json:"feedbacks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFeedbacksResponse) Reset() {
	*x = ListFeedbacksResponse{}
	mi := &file_homework_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFeedbacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbacksResponse) ProtoMessage() {}

func (x *ListFeedbacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbacksResponse.ProtoReflect.Descriptor instead.
func (*ListFeedbacksResponse) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListFeedbacksResponse) GetFeedbacks() []*Feedback {
	if x != nil {
		return x.Feedbacks
	}
	return nil
}

type GetAssignmentFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssignmentId  string                 `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssignmentFileRequest) Reset() {
	*x = GetAssignmentFileRequest{}
	mi := &file_homework_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssignmentFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignmentFileRequest) ProtoMessage() {}

func (x *GetAssignmentFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignmentFileRequest.ProtoReflect.Descriptor instead.
func (*GetAssignmentFileRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetAssignmentFileRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

type GetSubmissionFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubmissionFileRequest) Reset() {
	*x = GetSubmissionFileRequest{}
	mi := &file_homework_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubmissionFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionFileRequest) ProtoMessage() {}

func (x *GetSubmissionFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionFileRequest.ProtoReflect.Descriptor instead.
func (*GetSubmissionFileRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetSubmissionFileRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type GetFeedbackFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FeedbackId    string                 `protobuf:"bytes,1,opt,name=feedback_id,json=feedbackId,proto3" json:"feedback_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedbackFileRequest) Reset() {
	*x = GetFeedbackFileRequest{}
	mi := &file_homework_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedbackFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedbackFileRequest) ProtoMessage() {}

func (x *GetFeedbackFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedbackFileRequest.ProtoReflect.Descriptor instead.
func (*GetFeedbackFileRequest) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetFeedbackFileRequest) GetFeedbackId() string {
	if x != nil {
		return x.FeedbackId
	}
	return ""
}

type HomeworkFileURL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomeworkFileURL) Reset() {
	*x = HomeworkFileURL{}
	mi := &file_homework_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomeworkFileURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeworkFileURL) ProtoMessage() {}

func (x *HomeworkFileURL) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeworkFileURL.ProtoReflect.Descriptor instead.
func (*HomeworkFileURL) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{18}
}

func (x *HomeworkFileURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Assignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TutorId       string                 `protobuf:"bytes,2,opt,name=tutor_id,json=tutorId,proto3" json:"tutor_id,omitempty"`
	StudentId     string                 `protobuf:"bytes,3,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	FileId        string                 `protobuf:"bytes,6,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	DueDate       *timestamp.Timestamp   `protobuf:"bytes,7,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	CreatedAt     *timestamp.Timestamp   `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EditedAt      *timestamp.Timestamp   `protobuf:"bytes,9,opt,name=edited_at,json=editedAt,proto3" json:"edited_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Assignment) Reset() {
	*x = Assignment{}
	mi := &file_homework_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Assignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignment) ProtoMessage() {}

func (x *Assignment) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignment.ProtoReflect.Descriptor instead.
func (*Assignment) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{19}
}

func (x *Assignment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Assignment) GetTutorId() string {
	if x != nil {
		return x.TutorId
	}
	return ""
}

func (x *Assignment) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *Assignment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Assignment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Assignment) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *Assignment) GetDueDate() *timestamp.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *Assignment) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Assignment) GetEditedAt() *timestamp.Timestamp {
	if x != nil {
		return x.EditedAt
	}
	return nil
}

type Submission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssignmentId  string                 `protobuf:"bytes,2,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	FileId        string                 `protobuf:"bytes,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Comment       string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	SubmittedAt   *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	CreatedAt     *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EditedAt      *timestamp.Timestamp   `protobuf:"bytes,7,opt,name=edited_at,json=editedAt,proto3" json:"edited_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Submission) Reset() {
	*x = Submission{}
	mi := &file_homework_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{20}
}

func (x *Submission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Submission) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *Submission) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *Submission) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Submission) GetSubmittedAt() *timestamp.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *Submission) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Submission) GetEditedAt() *timestamp.Timestamp {
	if x != nil {
		return x.EditedAt
	}
	return nil
}

type Feedback struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	FileId        string                 `protobuf:"bytes,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Comment       string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt     *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EditedAt      *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=edited_at,json=editedAt,proto3" json:"edited_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Feedback) Reset() {
	*x = Feedback{}
	mi := &file_homework_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feedback) ProtoMessage() {}

func (x *Feedback) ProtoReflect() protoreflect.Message {
	mi := &file_homework_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feedback.ProtoReflect.Descriptor instead.
func (*Feedback) Descriptor() ([]byte, []int) {
	return file_homework_service_proto_rawDescGZIP(), []int{21}
}

func (x *Feedback) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Feedback) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *Feedback) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *Feedback) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Feedback) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Feedback) GetEditedAt() *timestamp.Timestamp {
	if x != nil {
		return x.EditedAt
	}
	return nil
}

var File_homework_service_proto protoreflect.FileDescriptor

const file_homework_service_proto_rawDesc = "" +
	"\n" +
	"\x16homework_service.proto\x12\vhomework.v1\x1a\x0ftimestamp.proto\"\a\n" +
	"\x05Empty\">\n" +
	"\x17DeleteAssignmentRequest\x12#\n" +
	"\rassignment_id\x18\x01 \x01(\tR\fassignmentId\"\xdb\x01\n" +
	"\x17CreateAssignmentRequest\x12\x19\n" +
	"\btutor_id\x18\x01 \x01(\tR\atutorId\x12\x1d\n" +
	"\n" +
	"student_id\x18\x02 \x01(\tR\tstudentId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x17\n" +
	"\afile_id\x18\x05 \x01(\tR\x06fileId\x125\n" +
	"\bdue_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\adueDate\"\xb1\x01\n" +
	"\x17UpdateAssignmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x17\n" +
	"\afile_id\x18\x04 \x01(\tR\x06fileId\x125\n" +
	"\bdue_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\adueDate\"\x84\x01\n" +
	"\x1dListAssignmentsByTutorRequest\x12\x19\n" +
	"\btutor_id\x18\x01 \x01(\tR\atutorId\x12H\n" +
	"\rstatus_filter\x18\x02 \x03(\x0e2#.homework.v1.AssignmentStatusFilterR\fstatusFilter\"\x8a\x01\n" +
	"\x1fListAssignmentsByStudentRequest\x12\x1d\n" +
	"\n" +
	"student_id\x18\x01 \x01(\tR\tstudentId\x12H\n" +
	"\rstatus_filter\x18\x02 \x03(\x0e2#.homework.v1.AssignmentStatusFilterR\fstatusFilter\"\xa2\x01\n" +
	"\x1cListAssignmentsByPairRequest\x12\x19\n" +
	"\btutor_id\x18\x01 \x01(\tR\atutorId\x12\x1d\n" +
	"\n" +
	"student_id\x18\x02 \x01(\tR\tstudentId\x12H\n" +
	"\rstatus_filter\x18\x03 \x03(\x0e2#.homework.v1.AssignmentStatusFilterR\fstatusFilter\"T\n" +
	"\x17ListAssignmentsResponse\x129\n" +
	"\vassignments\x18\x01 \x03(\v2\x17.homework.v1.AssignmentR\vassignments\"q\n" +
	"\x17CreateSubmissionRequest\x12#\n" +
	"\rassignment_id\x18\x01 \x01(\tR\fassignmentId\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\tR\x06fileId\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\"I\n" +
	"\"ListSubmissionsByAssignmentRequest\x12#\n" +
	"\rassignment_id\x18\x01 \x01(\tR\fassignmentId\"T\n" +
	"\x17ListSubmissionsResponse\x129\n" +
	"\vsubmissions\x18\x01 \x03(\v2\x17.homework.v1.SubmissionR\vsubmissions\"o\n" +
	"\x15CreateFeedbackRequest\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\tR\x06fileId\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\"o\n" +
	"\x15UpdateFeedbackRequest\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\tR\x06fileId\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\"G\n" +
	" ListFeedbacksByAssignmentRequest\x12#\n" +
	"\rassignment_id\x18\x01 \x01(\tR\fassignmentId\"L\n" +
	"\x15ListFeedbacksResponse\x123\n" +
	"\tfeedbacks\x18\x01 \x03(\v2\x15.homework.v1.FeedbackR\tfeedbacks\"?\n" +
	"\x18GetAssignmentFileRequest\x12#\n" +
	"\rassignment_id\x18\x01 \x01(\tR\fassignmentId\"?\n" +
	"\x18GetSubmissionFileRequest\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\"9\n" +
	"\x16GetFeedbackFileRequest\x12\x1f\n" +
	"\vfeedback_id\x18\x01 \x01(\tR\n" +
	"feedbackId\"#\n" +
	"\x0fHomeworkFileURL\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\xd2\x02\n" +
	"\n" +
	"Assignment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\btutor_id\x18\x02 \x01(\tR\atutorId\x12\x1d\n" +
	"\n" +
	"student_id\x18\x03 \x01(\tR\tstudentId\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x17\n" +
	"\afile_id\x18\x06 \x01(\tR\x06fileId\x125\n" +
	"\bdue_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\adueDate\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x127\n" +
	"\tedited_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\beditedAt\"\xa7\x02\n" +
	"\n" +
	"Submission\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rassignment_id\x18\x02 \x01(\tR\fassignmentId\x12\x17\n" +
	"\afile_id\x18\x03 \x01(\tR\x06fileId\x12\x18\n" +
	"\acomment\x18\x04 \x01(\tR\acomment\x12=\n" +
	"\fsubmitted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vsubmittedAt\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x127\n" +
	"\tedited_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\beditedAt\"\xe6\x01\n" +
	"\bFeedback\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\x12\x17\n" +
	"\afile_id\x18\x03 \x01(\tR\x06fileId\x12\x18\n" +
	"\acomment\x18\x04 \x01(\tR\acomment\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x127\n" +
	"\tedited_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\beditedAt*r\n" +
	"\x16AssignmentStatusFilter\x12!\n" +
	"\x1dASSIGNMENT_STATUS_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06UNSENT\x10\x01\x12\x0e\n" +
	"\n" +
	"UNREVIEWED\x10\x02\x12\f\n" +
	"\bREVIEWED\x10\x03\x12\v\n" +
	"\aOVERDUE\x10\x042\xa8\n" +
	"\n" +
	"\x0fHomeworkService\x12Q\n" +
	"\x10CreateAssignment\x12$.homework.v1.CreateAssignmentRequest\x1a\x17.homework.v1.Assignment\x12Q\n" +
	"\x10UpdateAssignment\x12$.homework.v1.UpdateAssignmentRequest\x1a\x17.homework.v1.Assignment\x12L\n" +
	"\x10DeleteAssignment\x12$.homework.v1.DeleteAssignmentRequest\x1a\x12.homework.v1.Empty\x12j\n" +
	"\x16ListAssignmentsByTutor\x12*.homework.v1.ListAssignmentsByTutorRequest\x1a$.homework.v1.ListAssignmentsResponse\x12n\n" +
	"\x18ListAssignmentsByStudent\x12,.homework.v1.ListAssignmentsByStudentRequest\x1a$.homework.v1.ListAssignmentsResponse\x12h\n" +
	"\x15ListAssignmentsByPair\x12).homework.v1.ListAssignmentsByPairRequest\x1a$.homework.v1.ListAssignmentsResponse\x12Q\n" +
	"\x10CreateSubmission\x12$.homework.v1.CreateSubmissionRequest\x1a\x17.homework.v1.Submission\x12t\n" +
	"\x1bListSubmissionsByAssignment\x12/.homework.v1.ListSubmissionsByAssignmentRequest\x1a$.homework.v1.ListSubmissionsResponse\x12K\n" +
	"\x0eCreateFeedback\x12\".homework.v1.CreateFeedbackRequest\x1a\x15.homework.v1.Feedback\x12K\n" +
	"\x0eUpdateFeedback\x12\".homework.v1.UpdateFeedbackRequest\x1a\x15.homework.v1.Feedback\x12n\n" +
	"\x19ListFeedbacksByAssignment\x12-.homework.v1.ListFeedbacksByAssignmentRequest\x1a\".homework.v1.ListFeedbacksResponse\x12X\n" +
	"\x11GetAssignmentFile\x12%.homework.v1.GetAssignmentFileRequest\x1a\x1c.homework.v1.HomeworkFileURL\x12X\n" +
	"\x11GetSubmissionFile\x12%.homework.v1.GetSubmissionFileRequest\x1a\x1c.homework.v1.HomeworkFileURL\x12T\n" +
	"\x0fGetFeedbackFile\x12#.homework.v1.GetFeedbackFileRequest\x1a\x1c.homework.v1.HomeworkFileURLB\vZ\t./pkg/apib\x06proto3"

var (
	file_homework_service_proto_rawDescOnce sync.Once
	file_homework_service_proto_rawDescData []byte
)

func file_homework_service_proto_rawDescGZIP() []byte {
	file_homework_service_proto_rawDescOnce.Do(func() {
		file_homework_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_homework_service_proto_rawDesc), len(file_homework_service_proto_rawDesc)))
	})
	return file_homework_service_proto_rawDescData
}

var file_homework_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_homework_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_homework_service_proto_goTypes = []any{
	(AssignmentStatusFilter)(0),                // 0: homework.v1.AssignmentStatusFilter
	(*Empty)(nil),                              // 1: homework.v1.Empty
	(*DeleteAssignmentRequest)(nil),            // 2: homework.v1.DeleteAssignmentRequest
	(*CreateAssignmentRequest)(nil),            // 3: homework.v1.CreateAssignmentRequest
	(*UpdateAssignmentRequest)(nil),            // 4: homework.v1.UpdateAssignmentRequest
	(*ListAssignmentsByTutorRequest)(nil),      // 5: homework.v1.ListAssignmentsByTutorRequest
	(*ListAssignmentsByStudentRequest)(nil),    // 6: homework.v1.ListAssignmentsByStudentRequest
	(*ListAssignmentsByPairRequest)(nil),       // 7: homework.v1.ListAssignmentsByPairRequest
	(*ListAssignmentsResponse)(nil),            // 8: homework.v1.ListAssignmentsResponse
	(*CreateSubmissionRequest)(nil),            // 9: homework.v1.CreateSubmissionRequest
	(*ListSubmissionsByAssignmentRequest)(nil), // 10: homework.v1.ListSubmissionsByAssignmentRequest
	(*ListSubmissionsResponse)(nil),            // 11: homework.v1.ListSubmissionsResponse
	(*CreateFeedbackRequest)(nil),              // 12: homework.v1.CreateFeedbackRequest
	(*UpdateFeedbackRequest)(nil),              // 13: homework.v1.UpdateFeedbackRequest
	(*ListFeedbacksByAssignmentRequest)(nil),   // 14: homework.v1.ListFeedbacksByAssignmentRequest
	(*ListFeedbacksResponse)(nil),              // 15: homework.v1.ListFeedbacksResponse
	(*GetAssignmentFileRequest)(nil),           // 16: homework.v1.GetAssignmentFileRequest
	(*GetSubmissionFileRequest)(nil),           // 17: homework.v1.GetSubmissionFileRequest
	(*GetFeedbackFileRequest)(nil),             // 18: homework.v1.GetFeedbackFileRequest
	(*HomeworkFileURL)(nil),                    // 19: homework.v1.HomeworkFileURL
	(*Assignment)(nil),                         // 20: homework.v1.Assignment
	(*Submission)(nil),                         // 21: homework.v1.Submission
	(*Feedback)(nil),                           // 22: homework.v1.Feedback
	(*timestamp.Timestamp)(nil),                // 23: google.protobuf.Timestamp
}
var file_homework_service_proto_depIdxs = []int32{
	23, // 0: homework.v1.CreateAssignmentRequest.due_date:type_name -> google.protobuf.Timestamp
	23, // 1: homework.v1.UpdateAssignmentRequest.due_date:type_name -> google.protobuf.Timestamp
	0,  // 2: homework.v1.ListAssignmentsByTutorRequest.status_filter:type_name -> homework.v1.AssignmentStatusFilter
	0,  // 3: homework.v1.ListAssignmentsByStudentRequest.status_filter:type_name -> homework.v1.AssignmentStatusFilter
	0,  // 4: homework.v1.ListAssignmentsByPairRequest.status_filter:type_name -> homework.v1.AssignmentStatusFilter
	20, // 5: homework.v1.ListAssignmentsResponse.assignments:type_name -> homework.v1.Assignment
	21, // 6: homework.v1.ListSubmissionsResponse.submissions:type_name -> homework.v1.Submission
	22, // 7: homework.v1.ListFeedbacksResponse.feedbacks:type_name -> homework.v1.Feedback
	23, // 8: homework.v1.Assignment.due_date:type_name -> google.protobuf.Timestamp
	23, // 9: homework.v1.Assignment.created_at:type_name -> google.protobuf.Timestamp
	23, // 10: homework.v1.Assignment.edited_at:type_name -> google.protobuf.Timestamp
	23, // 11: homework.v1.Submission.submitted_at:type_name -> google.protobuf.Timestamp
	23, // 12: homework.v1.Submission.created_at:type_name -> google.protobuf.Timestamp
	23, // 13: homework.v1.Submission.edited_at:type_name -> google.protobuf.Timestamp
	23, // 14: homework.v1.Feedback.created_at:type_name -> google.protobuf.Timestamp
	23, // 15: homework.v1.Feedback.edited_at:type_name -> google.protobuf.Timestamp
	3,  // 16: homework.v1.HomeworkService.CreateAssignment:input_type -> homework.v1.CreateAssignmentRequest
	4,  // 17: homework.v1.HomeworkService.UpdateAssignment:input_type -> homework.v1.UpdateAssignmentRequest
	2,  // 18: homework.v1.HomeworkService.DeleteAssignment:input_type -> homework.v1.DeleteAssignmentRequest
	5,  // 19: homework.v1.HomeworkService.ListAssignmentsByTutor:input_type -> homework.v1.ListAssignmentsByTutorRequest
	6,  // 20: homework.v1.HomeworkService.ListAssignmentsByStudent:input_type -> homework.v1.ListAssignmentsByStudentRequest
	7,  // 21: homework.v1.HomeworkService.ListAssignmentsByPair:input_type -> homework.v1.ListAssignmentsByPairRequest
	9,  // 22: homework.v1.HomeworkService.CreateSubmission:input_type -> homework.v1.CreateSubmissionRequest
	10, // 23: homework.v1.HomeworkService.ListSubmissionsByAssignment:input_type -> homework.v1.ListSubmissionsByAssignmentRequest
	12, // 24: homework.v1.HomeworkService.CreateFeedback:input_type -> homework.v1.CreateFeedbackRequest
	13, // 25: homework.v1.HomeworkService.UpdateFeedback:input_type -> homework.v1.UpdateFeedbackRequest
	14, // 26: homework.v1.HomeworkService.ListFeedbacksByAssignment:input_type -> homework.v1.ListFeedbacksByAssignmentRequest
	16, // 27: homework.v1.HomeworkService.GetAssignmentFile:input_type -> homework.v1.GetAssignmentFileRequest
	17, // 28: homework.v1.HomeworkService.GetSubmissionFile:input_type -> homework.v1.GetSubmissionFileRequest
	18, // 29: homework.v1.HomeworkService.GetFeedbackFile:input_type -> homework.v1.GetFeedbackFileRequest
	20, // 30: homework.v1.HomeworkService.CreateAssignment:output_type -> homework.v1.Assignment
	20, // 31: homework.v1.HomeworkService.UpdateAssignment:output_type -> homework.v1.Assignment
	1,  // 32: homework.v1.HomeworkService.DeleteAssignment:output_type -> homework.v1.Empty
	8,  // 33: homework.v1.HomeworkService.ListAssignmentsByTutor:output_type -> homework.v1.ListAssignmentsResponse
	8,  // 34: homework.v1.HomeworkService.ListAssignmentsByStudent:output_type -> homework.v1.ListAssignmentsResponse
	8,  // 35: homework.v1.HomeworkService.ListAssignmentsByPair:output_type -> homework.v1.ListAssignmentsResponse
	21, // 36: homework.v1.HomeworkService.CreateSubmission:output_type -> homework.v1.Submission
	11, // 37: homework.v1.HomeworkService.ListSubmissionsByAssignment:output_type -> homework.v1.ListSubmissionsResponse
	22, // 38: homework.v1.HomeworkService.CreateFeedback:output_type -> homework.v1.Feedback
	22, // 39: homework.v1.HomeworkService.UpdateFeedback:output_type -> homework.v1.Feedback
	15, // 40: homework.v1.HomeworkService.ListFeedbacksByAssignment:output_type -> homework.v1.ListFeedbacksResponse
	19, // 41: homework.v1.HomeworkService.GetAssignmentFile:output_type -> homework.v1.HomeworkFileURL
	19, // 42: homework.v1.HomeworkService.GetSubmissionFile:output_type -> homework.v1.HomeworkFileURL
	19, // 43: homework.v1.HomeworkService.GetFeedbackFile:output_type -> homework.v1.HomeworkFileURL
	30, // [30:44] is the sub-list for method output_type
	16, // [16:30] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_homework_service_proto_init() }
func file_homework_service_proto_init() {
	if File_homework_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_homework_service_proto_rawDesc), len(file_homework_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_homework_service_proto_goTypes,
		DependencyIndexes: file_homework_service_proto_depIdxs,
		EnumInfos:         file_homework_service_proto_enumTypes,
		MessageInfos:      file_homework_service_proto_msgTypes,
	}.Build()
	File_homework_service_proto = out.File
	file_homework_service_proto_goTypes = nil
	file_homework_service_proto_depIdxs = nil
}
